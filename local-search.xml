<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>git command</title>
    <link href="/2023/10/17/git-command/"/>
    <url>/2023/10/17/git-command/</url>
    
    <content type="html"><![CDATA[<h1 id="connet-to-uoft-server-from-pycharm"><a href="#connet-to-uoft-server-from-pycharm" class="headerlink" title="connet to uoft server from pycharm"></a>connet to uoft server from pycharm</h1><p>settings –&gt; SSH Configurations –&gt; add one</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Host: comps0.cs.utoronto.ca<br>Port: <span class="hljs-number">22</span><br><span class="hljs-keyword">User</span> <span class="hljs-type">name</span>: cs <span class="hljs-keyword">login</span> <span class="hljs-type">name</span><br><span class="hljs-keyword">Password</span>: cs passport<br></code></pre></td></tr></table></figure><p>–&gt; Test Connection</p><p>Then, go to the Terminal. There is a drop-down list. Choose the ssh server you just added. Then you are connected to the server.</p><h1 id="push-a-folder"><a href="#push-a-folder" class="headerlink" title="push a folder"></a>push a folder</h1><p>If there is a local folder in your laptop and you want to push it into a github repository.</p><ol><li>first, build a new repository in your github account</li><li>copy the ssh this new repository</li><li>(local folder) git bash<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git init<br>$ git remote add origin git@github.com:freya-popo/csc2529-hw3.git   <span class="hljs-comment"># connect the local folder to the github repo</span><br>$ git pull origin master <span class="hljs-comment"># pull the github repo to local repo, keep align</span><br>$ git add .   <span class="hljs-comment">#  add files to the local repo</span><br>$ git commit -m <span class="hljs-string">&quot;first push&quot;</span>  <span class="hljs-comment"># commit files to local repo</span><br>$ git push origin master  <span class="hljs-comment"># push the local repo to the github repo</span><br><br><span class="hljs-comment"># if the file is in the previous folder which has been connected to the github repo, only the last 3 steps need to be done</span><br></code></pre></td></tr></table></figure></li></ol><h1 id="delete-files-from-the-github-repo"><a href="#delete-files-from-the-github-repo" class="headerlink" title="delete files from the github repo"></a>delete files from the github repo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git pull origin master  <span class="hljs-comment">#本地同步远程仓库，将远程仓库里的内容拉下来</span><br>$ git <span class="hljs-built_in">rm</span> -r --cached 文件名 <span class="hljs-comment">#删除文件</span><br>$ git commit -m “delete <span class="hljs-built_in">dir</span>” <span class="hljs-comment">#提交并添加说明</span><br>$ git push origin master <span class="hljs-comment">#将本次更改更新到github项目上去</span><br></code></pre></td></tr></table></figure><h1 id="push-files-from-a-server"><a href="#push-files-from-a-server" class="headerlink" title="push files from a server"></a>push files from a server</h1><p>In this assignment, I want to use a remote server to run a python program. </p><p>First of all, ssh to the server.</p><p>Then clone the github repo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> https://github.com/freya-popo/csc2529-hw3.git<br><span class="hljs-comment"># from the https address</span><br><span class="hljs-comment"># if clone from the ssh address, there might be a error:  git@github.com: Permission denied (publickey), which means we need to set up the ssh</span><br></code></pre></td></tr></table></figure><p>After running the python program, I got a new picture and wanted to upload this picture to the github repo.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git add.<br>$ git commit -m <span class="hljs-string">&quot;second push&quot;</span><br></code></pre></td></tr></table></figure><p>The files is in the server’s local repo now. But I got an error when I pushed them by this command.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push origin master<br><span class="hljs-comment"># an error occurred: fatal: Authentication failed for &#x27;https://github.com/freya-popo/csc2529-hw3.git/&#x27;</span><br></code></pre></td></tr></table></figure><p>I think it is because the user is changed and I need to use a new token.</p><p>So, I need to generate a new token from my github account.</p><p>Settings –&gt; Developer Settings –&gt; Personal access tokens –&gt; Tokens(classic) –&gt; generate new token –&gt; generate new token (classic)</p><p>tips: remember to select appropriate scopes or another error will occur.</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">remote:</span> Permission <span class="hljs-keyword">to</span> freya-popo/csc2529-hw3.git denied <span class="hljs-keyword">to</span> freya-popo.<br><span class="hljs-symbol">fatal:</span> unable <span class="hljs-keyword">to</span> access <span class="hljs-comment">&#x27;https://github.com/freya-popo/csc2529-hw3.git/&#x27;: The requested URL returned error: 403</span><br></code></pre></td></tr></table></figure><p>Then we got the token, copy the token and run the push command again:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git push origin master<br>Username <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;https://github.com&#x27;</span>: freya-popo<br>Password <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;https://freya-popo@github.com&#x27;</span>: <span class="hljs-string">&#x27;token just got&#x27;</span><br></code></pre></td></tr></table></figure><p>Then you can see the new files in the github repo.</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux; Git; Github; Command</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>web learning - html</title>
    <link href="/2023/10/08/web-learning-html/"/>
    <url>/2023/10/08/web-learning-html/</url>
    
    <content type="html"><![CDATA[<p>$ hexo new [layout] “title” # default post</p><h1 id="HTML-structure"><a href="#HTML-structure" class="headerlink" title="HTML structure"></a>HTML structure</h1><p>we need to identify the type of the document at the beginning</p><p>every visible content should be written in the “body”</p><p>‘p’ tag is the basic tag which contains the most common content.</p><p>‘a’ tag: html attribute –<br>    ‘href’ is the name of this attribute, quote is the value of the attribute</p><p>we don’t need to close a ‘img’ tag (we don’t need write sth). specify the source of the image by using a src&#x3D;”” quote.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!DOCTYPE html&gt;<br><br>&lt;html&gt;<br>    &lt;body&gt;<br>        &lt;h1&gt;...&lt;/h1&gt;<br>        &lt;h2&gt;...&lt;/h2&gt;<br>        &lt;h3&gt;...&lt;/h3&gt;<br>        <br>        &lt;p&gt;...&lt;/p&gt;<br>        <br>        &lt;a herf=<span class="hljs-string">&#x27;https://google.com&#x27;</span>&gt; click this <span class="hljs-built_in">link</span> &lt;/a&gt;<br>        <br>        &lt;img src=<span class="hljs-string">&quot; &quot;</span> height=<span class="hljs-string">&quot;&quot;</span> width=<span class="hljs-string">&quot;&quot;</span> alt=<span class="hljs-string">&quot;&quot;</span>&gt; <br>        <br>    &lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><h2 id="attribute"><a href="#attribute" class="headerlink" title="attribute"></a>attribute</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo First Use Guide</title>
    <link href="/2023/09/01/hexo/"/>
    <url>/2023/09/01/hexo/</url>
    
    <content type="html"><![CDATA[<p>This is my first successful attempt at using Hexo to create a personal blog.<br>I’ve been wanting to do this for about a year now. Last year, during my internship<br>at Eleme, I had the idea of creating my own website, but I didn’t know how to<br>use templates or GitHub at the time, so I abandoned the idea.<br>Later, during my internship at Amazon, I tried again but still didn’t succeed.<br>After two days of effort this time, I finally completed the first version of the website.</p><p>In this blog, let me update the process of building my own blog.</p><hr><h3 id="Step1-Environment-set-up-Should-I-say-it-like-this"><a href="#Step1-Environment-set-up-Should-I-say-it-like-this" class="headerlink" title="Step1: Environment set up (Should I say it like this?)"></a>Step1: Environment set up (Should I say it like this?)</h3><p>I have installed <strong>npm</strong>, <strong>git</strong>, <strong>hexo</strong> and <strong>node.js</strong> .</p><h3 id="Step2-Install-Hexo"><a href="#Step2-Install-Hexo" class="headerlink" title="Step2: Install Hexo"></a>Step2: Install <strong>Hexo</strong></h3><p>Create a new folder locally (this folder will contain the files related to this blog.)</p><p>Then use <strong>git bash</strong> to open the cmd window. Then use these commands to install and set up <strong>Hexo</strong>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-cli -g<br>$ hexo -v   <span class="hljs-comment"># check the version of hexo</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init  <span class="hljs-comment"># After initializing this blog with the command, many files will appear inside this folder</span><br>$ npm install<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g  <span class="hljs-comment"># generate the website locally</span><br>$ hexo server  <span class="hljs-comment"># open the local server (in my understanding);  </span><br></code></pre></td></tr></table></figure><p>then we can check the website via <strong>localhost:4000</strong></p><h3 id="step3-change-the-theme-optional"><a href="#step3-change-the-theme-optional" class="headerlink" title="step3: change the theme (optional)"></a>step3: change the theme (optional)</h3><p>the default theme looks not very fashion, so we can choose another one on the theme page of hexo website.<br><a href="https://hexo.io/themes/index.html">Theme&#x2F;Hexo</a></p><p>I chose the theme “fluid”, after careful comparison and thorough planning (just kidding orz). I think this theme looks cute and simple.</p><p>You can choose whatever you like.</p><p>Remember, after choosing a theme, we need to clone this theme from github to a local folder – <strong>.&#x2F;theme</strong></p><p>All themes are stored there.</p><p>Use this command to clone the theme.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># example</span><br>$ git <span class="hljs-built_in">clone</span> https://github.com/DrakeLeung/hexo-theme-again.git themes/again<br><span class="hljs-comment"># blablabla.git is the address of the theme, themes/*** means we want to clone to this local folder</span><br></code></pre></td></tr></table></figure><p>Then we need to edit the config file: <strong>_config.yml</strong>, and update the theme</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br>theme: fluid<br></code></pre></td></tr></table></figure><p>Then, we clear the local cache and regenerate the website</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo g<br>$ hexo server<br></code></pre></td></tr></table></figure><p>up to now, we have generated a blog website. </p><h3 id="Step4-Github-repository-creation"><a href="#Step4-Github-repository-creation" class="headerlink" title="Step4: Github repository creation"></a>Step4: Github repository creation</h3><p>We need to create a <strong>GitHub account</strong> and create a <strong>new repository</strong> to host our Hexo website later.</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">tips: <span class="hljs-keyword">the</span> name <span class="hljs-keyword">of</span> this <span class="hljs-built_in">new</span> repository should be <span class="hljs-keyword">the</span> same <span class="hljs-keyword">with</span> <span class="hljs-string">&quot;your user name+.github.io&quot;</span>. <br></code></pre></td></tr></table></figure><p>For example, my name is <strong>freya-popo</strong>, the name of repository should be <strong>freya-popo.github.io</strong></p><p>In the process of creating a new repository, we can choose to add a readme file automatically. Also, we can choose the master branch.</p><h3 id="set-up-deployment"><a href="#set-up-deployment" class="headerlink" title="set up deployment"></a>set up deployment</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global user.name <span class="hljs-string">&quot;*******&quot;</span><br>$ git config --global user.email <span class="hljs-string">&quot;*******&quot;</span>   <span class="hljs-comment"># used in your github account</span><br></code></pre></td></tr></table></figure><p>Also, we need to edit the hexo config file again. I think it is to confirm where to deploy this blog website.</p><p>In the _config.yml file, in the last part, we update this part like this.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploy:<br><span class="hljs-built_in">type</span>: git<br>repo: git@github.com:yourname/yourname.github.io.git     <span class="hljs-comment"># it can be copied from your github repository page</span><br>branch: master<br></code></pre></td></tr></table></figure><p>Then, after deployment, this folder will be deployed to the master branch of your repository.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-deployer-git --save<br><span class="hljs-comment"># I am not entirely sure what this command does, but just input it and save something.</span><br></code></pre></td></tr></table></figure><h3 id="Step5-generate-a-SSH-key"><a href="#Step5-generate-a-SSH-key" class="headerlink" title="Step5: generate a SSH key"></a>Step5: generate a SSH key</h3><p>Before deploy the website, we still need to set up the SSH.</p><p>Go to the Github home page – setting – “SSH and GPG keys” – new SSH key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;******@***.com&quot;</span><br><span class="hljs-comment"># the eamil user for your github account </span><br></code></pre></td></tr></table></figure><p>After pressing Enter three times consecutively, a path will be displayed.</p><p>The default path is C:\Users\username.ssh</p><p>find the file : <strong>id_rsa.pub</strong> and copy the content to the github “new SSH key” page.</p><p>Then the key will be created.</p><h3 id="step6-deploy-your-blog-website"><a href="#step6-deploy-your-blog-website" class="headerlink" title="step6: deploy your blog website"></a>step6: deploy your blog website</h3><p>AHA, the last step</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d<br></code></pre></td></tr></table></figure><p>Congrats! Now you can see your own website via <strong><a href="https://username.github.io/">https://username.github.io</a></strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenAI API</title>
    <link href="/2023/09/01/openai-api/"/>
    <url>/2023/09/01/openai-api/</url>
    
    <content type="html"><![CDATA[<p>I interviewed for an ai intern position yesterday. Although the first interview seemed to go well,<br>I didn’t actually have a lot of ai-related experiece. So I asked the interviewer for some suggestions<br>on what I should learn before next interview to be a better match for this position.</p><p>LLM is the answer.</p><p>Therefore, in this post, I will update some learning notes on openai api calls.</p><hr>]]></content>
    
    
    
    <tags>
      
      <tag>openai</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>About Me</title>
    <link href="/2023/08/31/hello-world/"/>
    <url>/2023/08/31/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to my world! This is my first blog. Nice to meet you :)  </p><p>Maybe you don’t know me yet. So before our journey, let me introduce myself firstly.</p><p>I am freya-popo. I studied astronomy as an undergraduate and did some research on exoplanets. After graduation, I studied data science and earned my first master’s degree. Now I am working on my second master’s degree in applied computer science.  </p><p>Although I am still a DS track student, I want to learn more about computer science.  </p><p>Therefore, in this blog, I’m going to update some of my study notes about computer science and other interesting topics, although some of them may be very superficial.</p><p>Also, I am going to update some other content, such as novels (yas! I wrote some stories, though not many people read them), travel guides and MasterChef Series.</p><p>Once again, nice to meet you! :)</p><p><img src="/img/0.jpg"></p><h2 id="Other-things-that-won’t-be-on-the-resume…"><a href="#Other-things-that-won’t-be-on-the-resume…" class="headerlink" title="Other things that won’t be on the resume…"></a>Other things that won’t be on the resume…</h2><p><font size=4><strong>Travelling</strong></font></p><p><font size=4><strong>Writing</strong></font>  </p><p>Yes! I’ve written some novels, though not many people read them (sad)  </p><p>More info: <a href="https://www.zhihu.com/question/337741959/answer/3185354897">short stories</a></p><p><font size=4><strong>Cooking</strong></font>  </p>]]></content>
    
    
    
    <tags>
      
      <tag>hello_world</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
